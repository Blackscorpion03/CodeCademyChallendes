// Returns a random DNA base
const returnRandBase = () => {
  const dnaBases = ['A', 'T', 'C', 'G']
  return dnaBases[Math.floor(Math.random() * 4)] 
}

// Returns a random single strand of DNA containing 15 bases
const mockUpStrand = () => {
  const newStrand = []
  for (let i = 0; i < 15; i++) {
    newStrand.push(returnRandBase())
  }
  return newStrand
}

function pAequorFactory(specimenNum, dna){
  const number = Math.floor(Math.random()*999) + 1;
  const newDna = dna || mockUpStrand();
  return {
    specimenNum: number,
    dna: newDna,

    mutate() {
      const dnaBases = ['A', 'T', 'C', 'G'];
      const randomChoice = Math.floor(Math.random() * this.dna.length);
      let newBase = dnaBases[Math.floor(Math.random() * dnaBases.length)]

      while (newBase == this.dna[randomChoice]){
        newBase = dnaBases[Math.floor(Math.random() * dnaBases.length)];
      }
      this.dna[randomChoice] = newBase;
      return this.dna;
    },

    compareDNA(otherOrganism){
        const firstDNA = this.dna;
        const secondDNA = otherOrganism.dna;

        let compareDNAString = 0;
        for (let i =0; i< firstDNA.length; i++){
          if (firstDNA[i] === secondDNA[i]){
            compareDNAString++
          }
        }
        const percentageInCommon = Math.floor((compareDNAString / firstDNA.length) * 100);
          return `The following specimen numbers ${this.specimenNum} and ${otherOrganism.specimenNum} have ${percentageInCommon}% DNA in common.` ;
    },

    willLikelySurvive() {
      let survivalCount = 0;
      for (let i= 0; i <this.dna.length; i++){
        if (this.dna[i] === 'C' || this.dna[i] === 'G' ){
          this.survivalCount++
        }
      }     
      const survivalRate = Math.floor((this.survivalCount / this.dna.length) * 100);
      
      if (survivalRate >= 60 ){
          return true
        }  else {
          return false
        }
    },

    complementStrand(){
        let newStrand = [];
        for (base of this.dna){
          switch (base){
            case 'A': newStrand.push('T');
            break;
            case 'T': newStrand.push('A');
            break;
            case 'C': newStrand.push('G');
            break;
            case 'G': newStrand.push('C');
            break;
          }
        }
        return newStrand;
    },
  };  
}

function numberOfSpecimens() {
  // const specimenNumber = window.prompt('How many Specimens:' )
  const specimenNumber = 30;
  const specimen = [];
  for (let i = 0; i < specimenNumber; i++){
    const newSpecimen = pAequorFactory();
    specimen.push(newSpecimen);
  }

  for (let j = 0; j < specimen.length; j++){
    console.log(`Specimen Number: ${specimen[j].specimenNum}`)
    console.log(`DNA: ${specimen[j].dna}`)
    console.log(`Complement Strand: ${specimen[j].complementStrand()}`)
    console.log(`DNA Mutated: ${specimen[j].mutate()}`)
    for (let a = j +1; a < specimen.length; a++){
      console.log(`Compare: ${specimen[a].specimenNum}: ${specimen[j].compareDNA(specimen[a])}`)
      break;
    }
    console.log(`Survavil Rate: ${specimen[j].willLikelySurvive()}`)
    console.log(`..............................................................`)
  }
}

numberOfSpecimens()
